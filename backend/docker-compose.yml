# docker-compose.yml

services:
  redis-dev:
    image: redis:latest
    container_name: redis-dev
    restart: always
    ports:
      - "6379:6379"
    networks:
      - dev-network

  zookeeper-dev:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-dev
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dev-network

  kafka-dev:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-dev
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper-dev
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dev:2181'
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-dev:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - dev-network

  kafka-ui-dev:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-dev
    ports:
      - "9001:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: dev-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-dev:29092
    depends_on:
      - kafka-dev
    networks:
      - dev-network

  prometheus-dev:
    image: prom/prometheus:latest
    container_name: prometheus-dev
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - dev-network

  grafana-dev:
    image: grafana/grafana-oss:latest
    container_name: grafana-dev
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - prometheus-dev
    networks:
      - dev-network

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    platform: linux/arm64
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro'
    networks:
      - dev-network
    ports:
      - "9100:9100"

networks:
  dev-network:
    driver: bridge